{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "annotations": {
            "description": "Application template for Eclipse Che",
            "iconClass": "icon-openjdk",
            "tags": "eclipse,che,java,angular,ide",
            "version": "5.0.0"
        },
        "name": "eclipse-che"
    },
    "labels": {
        "template": "eclipse-che",
        "xpaas": "5.0.0"
    },
    "parameters": [{
            "description": "The name for the application.",
            "name": "APPLICATION_NAME",
            "value": "che-server",
            "required": true
        },
        {
            "description": "Custom hostname for http service route.  Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>",
            "name": "HOSTNAME_HTTP",
            "required": false
        },
        {
            "description": "Name of the che-server Docker image.",
            "name": "CHE_SERVER_DOCKER_IMAGE",
            "value": "codenvy/che-server:5.0.0-latest",
            "required": true
        },
        {
            "description": "IP of the host docker0 bridge. This IP is used by che-server to communicate with che workspaces",
            "name": "DOCKER0_BRIDGE_IP",
            "value": "172.17.0.1",
            "required": true
        },
        {
            "description": "Persistent Volume Capacity",
            "name": "VOLUME_CAPACITY",
            "value": "5Gi",
            "required": true
        }
    ],
    "objects": [{
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [{
                    "port": 8080,
                    "targetPort": 8080,
                    "protocol": "TCP",
                    "name": "tomcat"
                }],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Che http port."
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-http",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's http service."
                }
            },
            "spec": {
                "host": "${HOSTNAME_HTTP}",
                "to": {
                    "name": "${APPLICATION_NAME}"
                },
                "port": {
                    "targetPort": "tomcat"
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [{
                    "type": "ConfigChange"
                }],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "template": {
                    "metadata": {
                        "name": "${APPLICATION_NAME}",
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "terminationGracePeriodSeconds": 75,
                        "containers": [{
                            "name": "${APPLICATION_NAME}",
                            "image": "${CHE_SERVER_DOCKER_IMAGE}",
                            "imagePullPolicy": "IfNotPresent",
                            "privileged": true,
                            "livenessProbe": {
                                "tcpSocket": {
                                    "port": 8080
                                },
                                "initialDelaySeconds": 5,
                                "timeoutSeconds": 1
                            },
                            "readinessProbe": {
                                "tcpSocket": {
                                    "port": 8080
                                },
                                "initialDelaySeconds": 5,
                                "timeoutSeconds": 1
                            },
                            "volumeMounts": [{
                                    "name": "docker-socket-volume",
                                    "mountPath": "/var/run/docker.sock",
                                    "readOnly": false
                                },
                                {
                                    "name": "che-conf-volume",
                                    "mountPath": "/etc/conf",
                                    "readOnly": false
                                },
                                {
                                    "name": "che-lib-volume",
                                    "mountPath": "/home/user/che/lib-copy"
                                },
                                {
                                    "name": "che-workspaces-volume",
                                    "mountPath": "/home/user/che/workspaces"
                                },
                                {
                                    "name": "che-storage-volume",
                                    "mountPath": "/home/user/che/storage"
                                }
                            ],
                            "ports": [{
                                "name": "http",
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }],
                            "env": [{
                                    "name": "CHE_DOCKER_MACHINE_HOST_EXTERNAL",
                                    "value": "${HOSTNAME_HTTP}"
                                },
                                {
                                    "name": "CHE_WORKSPACE_STORAGE",
                                    "value": "/home/user/che/workspaces"
                                },
                                {
                                    "name": "CHE_WORKSPACE_STORAGE_CREATE_FOLDERS",
                                    "value": "true"
                                },
                                {
                                    "name": "CHE_LOCAL_CONF_DIR",
                                    "value": "/conf"
                                }
                            ],
                            "args": [
                                "--remote:${DOCKER0_BRIDGE_IP}",
                                "-s:uid",
                                "-s:client",
                                "run"
                            ],
                            "securityContext": {
                                "privileged": true,
                                "runAsUser": 0
                            }
                        }],
                        "volumes": [{
                                "name": "che-conf-volume",
                                "persistentVolumeClaim": {
                                    "claimName": "che-pv-conf"
                                }
                            },
                            {
                                "name": "docker-socket-volume",
                                "hostPath": {
                                    "path": "/var/run/docker.sock"
                                }
                            },
                            {
                                "name": "che-lib-volume",
                                "persistentVolumeClaim": {
                                    "claimName": "che-pv-lib"
                                }
                            },
                            {
                                "name": "che-workspaces-volume",
                                "persistentVolumeClaim": {
                                    "claimName": "che-pv-workspaces"
                                }
                            },
                            {
                                "name": "che-storage-volume",
                                "persistentVolumeClaim": {
                                    "claimName": "che-pv-storage"
                                }
                            }
                        ],
                        "serviceAccountName": "cheserviceaccount"
                    }
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "PersistentVolumeClaim",
            "metadata": {
                "name": "che-pv-conf"
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                    }
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "PersistentVolumeClaim",
            "metadata": {
                "name": "che-pv-lib"
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                    }
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "PersistentVolumeClaim",
            "metadata": {
                "name": "che-pv-workspaces"
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                    }
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "PersistentVolumeClaim",
            "metadata": {
                "name": "che-pv-storage"
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                    }
                }
            }
        }
    ]
}
